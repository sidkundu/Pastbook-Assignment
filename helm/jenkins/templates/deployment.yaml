apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appname }}
  labels:
    app: {{ .Values.appname }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.appname }}
  template:
    metadata:
      labels:
        app: {{ .Values.appname }}
    spec:
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
      initContainers:
      - name: "prepare-storage"
        image: "{{ .Values.initContainerImage }}"
        command:
        - 'sh'
        - '-c'
        - >
          rm -rfv /var/jenkins_home/lost+found;
          chmod -R 777 /var/jenkins_home
        volumeMounts:
        - mountPath: "/var/jenkins_home"
          name: jenkins-home
      hostNetwork: true
      containers:

      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http-port
          containerPort: {{ .Values.service.internalPort }}
        - name: jnlp-port
          containerPort: 50000
        volumeMounts:
        - name: jenkins-home
          mountPath: "/var/jenkins_home"
        - name: jenkins-docker-certs
          mountPath: "/certs/client"
        env:
        - name: JAVA_OPTS
          value: "{{ default "" .Values.javaOpts}}"
        - name: ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.appname }}
              key: jenkins-admin-user
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.appname }}
              key: jenkins-admin-password
        - name: DOCKER_HOST
          value: "tcp://localhost:2376"
        - name: DOCKER_CERT_PATH
          value: "/certs/client"
        - name: DOCKER_TLS_VERIFY
          value: "1"
        resources:
{{ toYaml .Values.resources | indent 10 }}

      - name: dind-container
        image: 083139177360.dkr.ecr.eu-central-1.amazonaws.com/dind:latest
        ports:
        - name: tcp
          containerPort: 2376
        securityContext:
          privileged: true
        env:
        - name: DOCKER_TLS_CERTDIR
          value: "/certs"
        volumeMounts:
        - name: jenkins-home
          mountPath: "/var/jenkins_home"
        - name: jenkins-docker-certs
          mountPath: "/certs/client"
        resources:
{{ toYaml .Values.resources | indent 10 }}

      volumes:
      - name: jenkins-docker-certs
        emptyDir: {}
      - name: jenkins-data
        emptyDir: {}
      - name: docker-graph-storage
        emptyDir: {}
      - name: jenkins-home
        emptyDir: {}
      network:
         
